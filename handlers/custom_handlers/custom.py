from aiogram.dispatcher.filters import Text
from aiogram.types import Message, CallbackQuery

from database.SQLite_ORM import User
from keyboards.inline.custom_keyboard import get_custom_keyboard
from loader import dp, Weather_Checker


@dp.message_handler(commands=["custom"])
async def handler_custom(message: Message) -> None:
    """
    –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É custom
    :param message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: None
    """
    user_id = message.from_user.id

    if User.get_or_none(User.user_id == user_id) is None:
        await message.answer('–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
        return
    user = User.get(User.user_id == user_id)
    user.history += '> –ó–∞–ø—Ä–æ—Å –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∫–æ–º–∞–Ω–¥—ã custom\n'
    user.save()
    custom_keyboard = get_custom_keyboard()
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ üëá', reply_markup=custom_keyboard)


@dp.callback_query_handler(Text(equals="today"))
async def handler_today(call: CallbackQuery) -> None:
    """
    –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –∫–æ–º–∞–Ω–¥—É today
    :param call: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: None
    """
    user_id = call.from_user.id

    if User.get_or_none(User.user_id == user_id) is None:
        await call.answer('–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
        return
    user = User.get(User.user_id == user_id)
    user.history += '> –ó–∞–ø—Ä–æ—Å –ø—Ä–æ–≥–Ω–æ–∑–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n'
    user.save()

    name, humidity, description, current_temp = Weather_Checker.get_current_weather(user.lat, user.lon)
    await call.message.answer('–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n'
                              '–ú–µ—Å—Ç–æ: {}\n'
                              '–ü–æ–≥–æ–¥–∞: {}\n'
                              '–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {}¬∞C\n'
                              '–í–ª–∞–∂–Ω–æ—Å—Ç—å: {}%\n'.format(name, description, current_temp, humidity))
    await call.answer()


@dp.callback_query_handler(Text(equals="tomorrow"))
async def handler_tomorrow(call: CallbackQuery) -> None:
    """
    –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ CallbackQuery tomorrow
    :param call: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: None
    """
    user_id = call.from_user.id

    if User.get_or_none(User.user_id == user_id) is None:
        await call.answer('–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
        return
    user = User.get(User.user_id == user_id)
    user.history += '> –ó–∞–ø—Ä–æ—Å –ø—Ä–æ–≥–Ω–æ–∑–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞\n'
    user.save()

    name, description, max_temp, min_temp = Weather_Checker.get_day_weather(user.lat, user.lon, 2)
    await call.message.answer('–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∑–∞–≤—Ç—Ä–∞:\n\n'
                              '–ú–µ—Å—Ç–æ: {}\n'
                              '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {}¬∞C\n'
                              '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {}¬∞C\n'
                              '–ü–æ–≥–æ–¥–∞: {}\n'.format(name, max_temp, min_temp, description))
    await call.answer()


@dp.callback_query_handler(Text(equals="after_tomorrow"))
async def handler_after_tomorrow(call: CallbackQuery) -> None:
    """
    –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ CallbackQuery after_tomorrow
    :param call: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: None
    """
    user_id = call.from_user.id

    if User.get_or_none(User.user_id == user_id) is None:
        await call.answer('–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!')
        return
    user = User.get(User.user_id == user_id)
    user.history += '> –ó–∞–ø—Ä–æ—Å –ø—Ä–æ–≥–Ω–æ–∑–∞ –Ω–∞ –ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞\n'
    user.save()

    name, description, max_temp, min_temp = Weather_Checker.get_day_weather(user.lat, user.lon, 3)
    await call.message.answer('–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞:\n\n'
                              '–ú–µ—Å—Ç–æ: {}\n'
                              '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {}¬∞C\n'
                              '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {}¬∞C\n'
                              '–ü–æ–≥–æ–¥–∞: {}\n'.format(name, max_temp, min_temp, description))
    await call.answer()
